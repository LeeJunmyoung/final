<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cloud">
<!--===================================================== 클라우드 나타내는 페이지 ======================================-->
	<parameterMap id="listinfo" type="hashMap">
		<parameter property="com_num"/>
		<parameter property="folder"/>	
	</parameterMap>
	<select id="getcloudlist" parameterMap="listinfo" resultType="cloud.db.CloudInfo">
	<choose>
		<when test="folder eq null||folder == ''">
		select * from cloud where com_num = #{com_num} and folder is null
		</when>
		<otherwise>
		select * from cloud where com_num = #{com_num} and folder = #{folder}
		</otherwise>
	</choose>
	</select>
	
	<insert id="upload" parameterType="cloud.db.CloudInfo">
		insert into cloud values(cloud_seq.NEXTVAL, #{file_name}, #{file_path}, #{file_uploader}, #{file_size}, sysdate, #{com_num},#{com_pos_num}, #{folder},#{promgr_num},#{mem_num})
	</insert>
	<select id="getFilePath" parameterType="int" resultType="String">
		select file_path from cloud where file_num = #{file_num}
	</select>
	<select id="getFileName" parameterType="int" resultType="String">
		select file_name from cloud where file_num = #{file_num}
	</select>
	<select id="getDeleteList" resultType="cloud.db.CloudInfo">
		select * from cloud 
		<where>
		file_num in
			<foreach collection="array" item="file_num" index="index" separator="," open="(" close=")">
				#{file_num}
			</foreach>
		</where>
	</select>
	<delete id="deleteFiles">
		delete from cloud
		<where>
			file_num in
			<foreach collection="array" item="file_num" index="index" separator="," open="(" close=")">
				#{file_num}
			</foreach>
		</where>
	</delete>

	<parameterMap id="dupliInfo" type="hashMap">
		<parameter property="item"/>
		<parameter property="folder"/>
		<parameter property="com_num"/>	
	</parameterMap>	
	
	
	<select id="dupliCk" parameterMap="dupliInfo" resultType="String">
		select count(*) from cloud
		<where>
		 file_name = #{item} and com_num= #{com_num} 
	
			<choose>
				<when test="folder eq null|| folder == ''">
				and folder is null
				</when>
				<otherwise>
					and folder = #{folder}
				</otherwise>
			</choose>
<!-- 			 <if test='#{folder, jdbcType=VARCHAR}!= "null"'>
			 and folder = #{folder}
			 </if> -->

	
		<!-- 	<choose>
				<when test="#{folder == '' || folder eq null}" >
					 folder is null
				</when>
				<otherwise>
					folder = #{folder}
				</otherwise>
			</choose> -->
		
		</where>
	</select>
	
	
	<select id="find_promgr_folder" parameterType="int"  resultType="String">
		select file_path from cloud where  promgr_num = #{promgr_num} and folder is null	
	</select>
	
	
	<select id="findUpper" parameterType="String" resultType="String">
		select folder from cloud where file_path = #{folder}
	</select>
	<select id="promgrDupli" parameterType="cloud.db.CloudInfo" resultType="int">
	 select count(*) from cloud
	 <where>
	 	com_num = #{com_num}
	 	and promgr_num = #{promgr_num}
	 	and folder = #{folder}
	 </where>
	</select>
	<select id="getFolderPath" parameterType="hashmap" resultType="String">
		select file_path from cloud where com_num = #{com_num} and folder is null and promgr_num = #{promgr_num} and file_name = #{file_name}
	</select>
	<update id="changeFileName" parameterType="hashmap">
		update cloud set file_name = #{file_name}
			<where>
				file_num = #{file_num}
			</where>
	</update>
	<select id="getdupliInfo" parameterType="int" resultType="hashmap">
		select folder, com_num from cloud where file_num = #{file_num}	
	</select>
</mapper>